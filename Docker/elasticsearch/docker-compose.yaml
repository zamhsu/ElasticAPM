version: '3.9'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    ports:
      - 9200:9200
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=500ms"]
      retries: 300
      interval: 1s
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "network.host=0.0.0.0"
      - "transport.host=127.0.0.1"
      - "http.host=0.0.0.0"
      - "cluster.routing.allocation.disk.threshold_enabled=false"
      - "discovery.type=single-node"
      - "xpack.security.enabled=true"
      - "xpack.security.authc.anonymous.roles=remote_monitoring_collector"
      - "xpack.security.authc.realms.file.file1.order=0"
      - "xpack.security.authc.realms.native.native1.order=1"
      - "xpack.license.self_generated.type=basic"
      - "xpack.security.authc.token.enabled=true"
      - "xpack.security.authc.api_key.enabled=true"
      # - "logger.org.elasticsearch=${ES_LOG_LEVEL:-error}"
      - "action.destructive_requires_name=false"
      - "ingest.geoip.downloader.enabled=false"
      # http ssl
      - xpack.security.http.ssl.enabled=false
      # - xpack.security.http.ssl.key=certs/es01/es01.key
      # - xpack.security.http.ssl.certificate=certs/es01/es01.crt
      # - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      # transport ssl
      # - xpack.security.transport.ssl.enabled=true
      # - xpack.security.transport.ssl.key=certs/es01/es01.key
      # - xpack.security.transport.ssl.certificate=certs/es01/es01.crt
      # - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      # - xpack.security.transport.ssl.verification_mode=certificate
    volumes:
      - ${VOLUME_CERTS}:/usr/share/elasticsearch/config/certs
      - ${VOLUME_ESDATA}:/usr/share/elasticsearch/data
      - ${VOLUME_ESROLES}:/usr/share/elasticsearch/config/roles.yml
      - ${VOLUME_ESUSERS}:/usr/share/elasticsearch/config/users
      - ${VOLUME_ESUSERSROLES}:/usr/share/elasticsearch/config/users_roles
  
  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana
    ports:
      - 5601:5601
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:5601/api/status | grep -q 'All services are available'"]
      retries: 300
      interval: 1s
    environment:
      ELASTICSEARCH_HOSTS: '["http://host.docker.internal:9200"]'
      ELASTICSEARCH_USERNAME: "${KIBANA_ES_USER:-kibana_system_user}"
      ELASTICSEARCH_PASSWORD: "${KIBANA_ES_PASS:-changeme}"
      # XPACK_FLEET_AGENTS_FLEET_SERVER_HOSTS: '["https://host.docker.internal:8220"]'
      XPACK_FLEET_AGENTS_ELASTICSEARCH_HOSTS: '["http://host.docker.internal:9200"]'
    depends_on:
      elasticsearch: { condition: service_healthy }
    volumes:
      - ${VOLUME_KIBANACONFIG}:/usr/share/kibana/config/kibana.yml
      - ${VOLUME_KIBANADATA}:/usr/share/kibana/data